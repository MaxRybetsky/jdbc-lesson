package ru.skillbox.jdbc.step4;

import ru.skillbox.jdbc.step4.model.Product;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * Код к шагу 4.3 (Пример SQL-инъекции)
 */
public class ProductsCrudRepositoryWithVulnerability {
    private static final String DB_URL = "jdbc:postgresql://localhost:5433/postgres";
    private static final String DB_USER = "postgres";
    private static final String DB_PASSWORD = "postgres";

    public static void main(String[] args) throws SQLException {
        ProductsCrudRepositoryWithVulnerability repository = new ProductsCrudRepositoryWithVulnerability();

        // sql injection - ' and 1=1 and name like '
        System.out.println("Поиск товара по названию:");
        Scanner scanner = new Scanner(System.in);
        String name = scanner.nextLine();

        List<Product> products = repository.getProductsByName(name);

        products.forEach(System.out::println);
    }

    // Метод для получения продукта по Name
    public List<Product> getProductsByName(String productName) throws SQLException {
        ArrayList<Product> products = new ArrayList<>();

        String sql = "SELECT id, name, price FROM products WHERE name like '%" + productName + "%'";

        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
             Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery(sql)) {

            while (resultSet.next()) {
                products.add(mapResultSetToProduct(resultSet));
            }

        }

        return products;
    }

    // Вспомогательный метод для маппинга ResultSet в объект Product
    private Product mapResultSetToProduct(ResultSet resultSet) throws SQLException {
        long id = resultSet.getLong("id");
        String name = resultSet.getString("name");
        long price = resultSet.getLong("price");

        return new Product(id, name, price);
    }
}
